{"ast":null,"code":"var _jsxFileName = \"/Users/lito/Desktop/ibm-2021-r2-campus-recruitment-main/2021-r2-campus-recruitment-master/2021-r2-campus-recruitment-master/src/product/components/productContainer.js\",\n    _s = $RefreshSig$();\n\nimport { getProduct } from '../dao/productDao';\nimport { useState, useEffect } from 'react';\nimport '../style/productStyle.css';\nimport { ProductItem } from './productItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ProductContainer = ({\n  storeAddCart\n}) => {\n  _s();\n\n  //React useState hook is used for state management. Utilzes setter setProducts to update product state\n  const [products, setProducts] = useState([]); //React useEffect hook with empty array as second argument will run below code only once \n\n  useEffect(() => {\n    getProduct().then(res => {\n      setProducts(res);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"align-grid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: products && products.map(product => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid-item\",\n            children: /*#__PURE__*/_jsxDEV(ProductItem, {\n              id: product.id,\n              name: product.name,\n              description: product.description,\n              price: product.price,\n              onAddToCartClick: storeAddCart\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ProductContainer, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n\n_c = ProductContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductContainer\");","map":{"version":3,"sources":["/Users/lito/Desktop/ibm-2021-r2-campus-recruitment-main/2021-r2-campus-recruitment-master/2021-r2-campus-recruitment-master/src/product/components/productContainer.js"],"names":["getProduct","useState","useEffect","ProductItem","ProductContainer","storeAddCart","products","setProducts","then","res","map","product","id","name","description","price"],"mappings":";;;AAAA,SAAQA,UAAR,QAAyB,mBAAzB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,2BAAP;AACA,SAASC,WAAT,QAA4B,eAA5B;;;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAoB;AAAA;;AAChD;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC,CAFgD,CAIhD;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZF,IAAAA,UAAU,GAAGQ,IAAb,CAAkBC,GAAG,IAAI;AACvBF,MAAAA,WAAW,CAACE,GAAD,CAAX;AACD,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMF,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,kBACGH,QAAQ,IAAIA,QAAQ,CAACI,GAAT,CAAaC,OAAO,IAAI;AACnC,8BACE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,mCACE,QAAC,WAAD;AACE,cAAA,EAAE,EAAEA,OAAO,CAACC,EADd;AAEE,cAAA,IAAI,EAAED,OAAO,CAACE,IAFhB;AAGE,cAAA,WAAW,EAAEF,OAAO,CAACG,WAHvB;AAIE,cAAA,KAAK,EAAEH,OAAO,CAACI,KAJjB;AAKE,cAAA,gBAAgB,EAAEV;AALpB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF;AAWD,SAZY;AADf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAsBD,CAjCM;;GAAMD,gB;;KAAAA,gB","sourcesContent":["import {getProduct} from '../dao/productDao';\nimport { useState, useEffect } from 'react';\nimport '../style/productStyle.css';\nimport { ProductItem } from './productItem';\n\nexport const ProductContainer = ({storeAddCart}) => {\n    //React useState hook is used for state management. Utilzes setter setProducts to update product state\n    const [products, setProducts] = useState([]);\n    \n    //React useEffect hook with empty array as second argument will run below code only once \n    useEffect(() => {\n        getProduct().then(res => {\n          setProducts(res);\n        });\n    }, [])\n\n  return (\n    <>\n      <div className='align-grid'>\n        <div className='grid'>\n          {products && products.map(product => {\n            return (\n              <div className=\"grid-item\">\n                <ProductItem\n                  id={product.id}\n                  name={product.name}\n                  description={product.description}\n                  price={product.price}\n                  onAddToCartClick={storeAddCart}\n                />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </>\n  )\n\n}\n"]},"metadata":{},"sourceType":"module"}